PATH_TO_DOCBOOK_XSL = "/opt/local/share/xsl/docbook-xsl"
XSL_FOR_XHTML = PATH_TO_DOCBOOK_XSL + "/xhtml/chunk.xsl"

# OUTPUT_DIR = "output"
OUTPUT_DIR = "Newton Commander Help"
OUTPUT_HELPINDEX = "#{OUTPUT_DIR}.helpindex"

def make_an_empty_dir(dirname)
  unless FileTest.exist?(dirname)
    FileUtils.mkdir(dirname)
  end
  Dir.chdir(dirname) do
    files = Dir.glob("*")
    FileUtils.rm_r(files)
  end
end

desc "run the Help Indexer, produces a output.helpindex file"
task :run_help_indexer do
  abspath_outdir = File.join(Dir.pwd, OUTPUT_DIR)
  dir = '/Developer/Applications/Utilities/Help Indexer.app/Contents/MacOS'
  options = "-ShowProgress YES -LogStyle 2"
  Dir.chdir(dir) do
    cmd = './Help\ Indexer '
    cmd += "'#{abspath_outdir}' "
    cmd += options
    system(cmd)
  end
end
task :r => :run_help_indexer

desc "inspect the output.helpindex file"
task :inspect_helpindex do
  abspath_to_file = File.join(Dir.pwd, OUTPUT_DIR, OUTPUT_HELPINDEX)
  dir = '/Developer/Applications/Utilities/Help Indexer.app/Contents/Resources'
  Dir.chdir(dir) do
    cmd = './Unarchiver '
    cmd += "'#{abspath_to_file}' "
    system(cmd)
  end
end
task :i => :inspect_helpindex

desc "compile the docbook into xhtml"
task :deploy_xhtml do
  output_dir = OUTPUT_DIR

  make_an_empty_dir(output_dir)

  ENV['XSL'] = File.join(Dir.pwd, "config.xml")
  cmd = "xsltproc"
  # cmd << " --verbose"
  cmd << " --xinclude" 
  cmd << " --timing"
  
  cmd << " --stringparam html.stylesheet main.xml.css"
  
  # Do not use the Internet to fetch DTD's, entities or documents
  cmd << " --nonet"
  
  cmd << " --output ."
  cmd << " $XSL"
  cmd << " ../main.xml"
  puts "RUN: #{cmd.inspect}"
  Dir.chdir(output_dir) do
    system(cmd)
  end
  
  FileUtils.cp('main.xml.css', output_dir)
  FileUtils.cp_r('images', output_dir)
end

desc "open the xhtml output in safari"
task :open_xhtml do
  Dir.chdir(OUTPUT_DIR) do
    system('open index.html')
  end
end

task :d => :deploy_xhtml
task :o => :open_xhtml