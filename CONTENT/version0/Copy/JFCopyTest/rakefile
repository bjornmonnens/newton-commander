

def fill_dir
  dirs = [
    'a/b/c/d/e/f',
    'a/b/c/12223/lskdfj',
    'a/b/c/12223/asd',
    'a/b/c/12333/asd',
    'a/b/c/b1333/baba',
    'test',
    'TesT2',
    'A B C - wer',
    'lsdkjf',
    'lsdkjfX',
    'bxb',
  ]
  files0 = [
    'abc',
    'a/b/c/1233',
    'README.txt'
  ]
  files1 = [
    'longer.txt',
    'muchlonger.txt',
    'a/blahblha.cpp',
    'a/main.cpp'
  ]
  files2 = [
    'bigfile.txt',
    'big2.txt'
  ]
  links0 = [
    ['longer.txt', 'link_to_longer.txt'],
    ['../../a/main.cpp', 'a/b/c/link_to_main.cpp'],
    ['../../README.txt', 'a/b/README.html.txt'],
    ['a', 'a2'],
    ['x', 'x'],
    ['y', 'z'],
    ['z', 'y'],
  ]
  hardlinks0 = [
    ['a/main.cpp', 'hmain.cpp'],
    ['longer.txt', 'hlonger.txt'],
    ['abc', 'habc'],
  ]
  chmod755 = [
    'longer.txt',
    'a',
    'y',
    'a/b/c'
  ]
  chmod600 = [
    'README.txt',
    'muchlonger.txt',
    'test'
  ]
  
  FileUtils.mkdir("src")
  FileUtils.mkdir("dest")
  
  Dir.chdir("src") do
    FileUtils.mkdir_p(dirs)
    
    files0.each do |file|
      File.open(file, "w+") {|f| f.write("short file #{file}") }
    end
    files1.each do |file|
      File.open(file, "w+") {|f| f.write("long file #{file} lorem ipsum lorem ipsum") }
    end
    files2.each do |file|
      File.open(file, "w+") do |f| 
        100000.times {|i| 
          f.write("file: #{file}\n") if (i % 50) == 0
          f.write("test #{i} test\n")
        }
      end
    end
    links0.each do |linkfrom, linkto|
      FileUtils.ln_s(linkfrom, linkto)
    end
    hardlinks0.each do |linkfrom, linkto|
      FileUtils.ln(linkfrom, linkto)
    end
    chmod755.each do |file|
      FileUtils.chmod(0755, file)
    end
    chmod600.each do |file|
      FileUtils.chmod(0600, file)
    end
  end
end


desc "create a dir in /tmp containing test dirs+files"
task :generate do
  dir = "/tmp/juxtafile_test"

  if FileTest.exist?(dir)
    FileUtils.rm_r(dir)
  end
  FileUtils.mkdir(dir)

  Dir.chdir(dir) do
    fill_dir
  end
  
  puts "successfully generated '#{dir}'"
end

task :g => :generate