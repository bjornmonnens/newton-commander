2014-01-07 Simon Strandgaard

	* Implemented the move operation (the F6 hot key).
	I wanted to do this years ago when I implemented the move operation, but I never
	found time for doing it. It took my whole vinter vacation to get to a point
	where I could finally implement the move operation.

2013-12-31 Simon Strandgaard

	* Eliminated a painful 10 second delay when starting a worker process. 
	There was no delay before Mavericks. On Mavericks the Bonjour/DNS lookup takes 5 seconds.
	I do 2 lookups, one in the parent process and another in the child process. 
	Adding up to 10 seconds.
	Released version 0.1.1 - The second .zip file ever available to the public.

2013-12-30 Simon Strandgaard

    * Migrated to CocoaPods from a huge chaotic monolith Xcode project with subprojects.
	I have splitted it up into different 5 cocoapod repositories.
	This has introduced lots of warnings.
	
	* Now uses fts_read() to traverse the file system.
	This is kind of a set back, because fts_read() cannot show "cloaked" files.
	In the past I used getdirentries() which can show "cloaked" files.
	However getdirentries() is deprecated and also requires 32bit inodes preprocessor defines.
	I don't like that Apple uses "cloak" to hide things!
	
	* I have made a PSMTabBarControl cocoapod that uses ARC.
	No more any warnings about PSMTabBarControl using garbage collection.
	
	* With CocoaPods it is much easier to control what happens when archiving.
	So it was easy to create a .zip file containing the app.
	Released version 0.1.0 - The first .zip file ever available to the public.
	
2013-12-18 Simon Strandgaard

    * Migrated to ARC.

2013-11-08 Simon Strandgaard

    * Made Newton Commander open source under MIT license.

2011-07-16 Simon Strandgaard

    * fullscreen support on Lion.

2011-07-12  Simon Strandgaard

    * Lion scrollbar support added. On Snow Leopard or earlier we continue to show iTunes scrollbars.

2011-07-11  Simon Strandgaard

    * Newton Commander now compiles with Xcode4. In 64bit mode. On Lion!
    I had to remove all traces of ibplugins and bindings in order to compile.

2011-06-16  Simon Strandgaard
    
    * Support for Magic Trackpad gestures. Tree finger swipe to cycle between tabs
    and to navigate back in the history.

2011-06-04  Simon Strandgaard
    
    * Eliminated 113 warnings. There are no more warnings remaining in Xcode3.

2010-11-21  Simon Strandgaard

    * Sorting: by clicking in the table column headers is now causing the column to be sorted.

2010-10-18  Simon Strandgaard

    * bugfix: eliminated tiny glitch in horizontal scroller, so that it now looks flawless.

2010-10-17  Simon Strandgaard

    * bugfix: F5 when copying symlinks, was copied as hardlinks. The reason was that the scanner
    code had a follow symlink option, so that the files appeared as hardlinks to the copy code.
    
    * CMD E to eject.. added

2010-09-28  Simon Strandgaard

    * TransferOperation now uses a queue, so that an operation can be aborted
    and so that individual traversalobjects can be resumed/skipped.

    * Copy operation can now be aborted by hitting ESC.
    It doesn't kill the worker process, it just empties the pending queue.

2010-09-26  Simon Strandgaard

    * We can now show an alert to the user when there is trouble copying files.
    It doesn't say a lot, but at least it shows that there is some kind of problem.

2010-09-23  Simon Strandgaard

    TAG v1.0.6
    * Render speed is now somewhat tolerable. It's no longer incredibly painful.
    Solution was to optimize the NCDateCell's render code.
    I think it's leaking memory though.

2010-09-21  Simon Strandgaard

    * Finished optimizing the NCDateCell.m to use CoreText and do a lot of lazy initialization.

    * Fixed mem leak.. I thought that "copy" would create an autorelease copy.. however it 
    creates a retained copy that the callee must release.

2010-09-19  Simon Strandgaard

    * Introduced a NCListerCell class that is used as the superclass for all the cells in the lister,
    it contains a lot of theming stuff. Had to do a major refactoring.

    * Experiments with CoreText.. seems to be MUCH faster.

    * fixed BUG: while creating the NCListerCell class I somehow managed to screw up something so that
    cycling through tabs no longer works (it crashes). Only hint is this:
    2010-09-19 04:23:26.487 Newton Commander[52393:80f] *** -[NSCFDictionary setObject:forKey:]: attempt to insert nil value (key: NSColor)
    What can be causing this?  retain, or deep copy, or something else?
    I made 14 commits yesterday..
    prompt> bzr log -l20
    prompt> bzr revert -r561
    prompt> bzr revert -r570
    prompt> bzr revert -r567
    prompt> bzr revert -r568
    prompt> bzr revert -r569
    prompt> bzr diff -r568..569 NCDateCell.m
    bug was introduced in revision 569.. easy to fix
    prompt> bzr revert
    fixing it

    * Date columns are now using CoreText for text rendering which is much faster than NSAttributedString drawAtPoint.
    Where it before could take 500 milliseconds to do a pagedown, it now takes 100 milliseconds.

2010-09-07  Simon Strandgaard

    * FIXED: Hit enter on a file and the navigation jumps to the root folder. It should not jump anywhere.
    It didn't do this in the past. When you hit enter then nothing happened. The thing that it
    jumps to the root folder is really annoying especially because a file is not a dir and thus
    it makes no sense for it to try navigate.
    /Users/neoneye/Desktop/CocoaTechFoundation/images/docs_local.icns

2010-09-06  Simon Strandgaard

    * Open multiple items with the left/right menus. Previous you could only open 1 at a time.

2010-09-05  Simon Strandgaard

    * ACLs on symlinks are now copied as well.

    * No longer using paths while copying.. instead we now use filedescriptors (more robust).

    * I had mixed up Birthtime column with Creation column.. now correct.

    * Added a Backup Date column.

2010-09-03  Simon Strandgaard

    TAG v1.0.5
    * selection + cursor can now be full preserved.

    * cleaned up the reload / breadcrumb system.

    * got rid of the no longer used simple lister data source.. we have used the advanced one for ages now.

2010-08-30  Simon Strandgaard

    * selection + cursor can now be preserved to some degree.

    * cursor is now restore after files has been deleted.
    
2010-08-25  Simon Strandgaard

    * Added caching of NSImages, this saves around 0.1 second, whenever a dir is reloaded!

    * Added progressbar when the lister is busy obtaining the dir entries.

2010-08-22  Simon Strandgaard

    * Added "size of resource fork" column.

2010-08-21  Simon Strandgaard

    * Chflags column added.

    * The worker process can now switch to negative user-id's, so that we now can browse as the
    "nobody" user (uid=-2).
    
2010-08-19  Simon Strandgaard

    * Used spotlight calls for some stuff where I should have used LSCopyKindStringForRef.

2010-08-18  Simon Strandgaard

    * We can now display spotlight info such as: Kind, ContentType, FinderComment.

2010-08-16  Simon Strandgaard

    * We can now display 1 or 0 wether a file has ACL rules or not.

    * We can now display number of xattr for a file.

    * We can now display the inode number.

2010-08-14  Simon Strandgaard

    * Inserted a black thin 1 pixel line immediately below the pathcontrol and above the lister.
    This 1 pixel line makes it look much more complete... (I tried prototyping it).
    Without it, it looks like something is missing.

    * Made pretty printer for the Date column.

2010-08-13  Simon Strandgaard

    * Renamed NCWorker executable to NewtonCommanderHelper.

2010-08-09  Simon Strandgaard

    * PathControl now removes special letters that caused it to make a newline

    * reloading listers when there are changes in the filesystem.. yay

2010-08-08  Simon Strandgaard

    * window now saves: which panel was active / inactive and when the program is launched then restore.
    
    * For some reason I couldn't cd into some dirs, even when running as root. If I start up 
    Midnight Commander as root, then I could do it without problems.
    The problem was with this dir:  /Volumes/Leopard/Users/neoneye/Library/VirtualBox
    Permission problem.. perhaps I run some file-system code in the main process
    that ought to be moved to the worker process where it will run as root. YEP.. indeed this was the problem.
    SOLUTION: don't try resolve the path within [NCLister.m navigateInto], but update the pathcontrol anyways
    so it appears as if you immediately navigates into it. Instead we want to make it happen within the worker.
    When the path has been resolved, then the resolved path is passed back to the lister.
    If the resolved path is different from the requested path then update the pathcontrol.

2010-08-07  Simon Strandgaard

    * Moved the VolumeInfo indicator from the NSToolbar down into the NCListerCounter, so that
    all non-interactive elements are grouped together. On a wide screen it's a lot of wasted
    space in this area.

2010-08-03  Simon Strandgaard

    * figured out how to style a NSPathControl so it now looks very much like Path Finder.

2010-08-02  Simon Strandgaard

    TAG v1.0.4
    * Copy is now working with progressbar + root + passes AnalyzeCopy tests.
    Still lot to do... Needs to be abortable too. Needs to skip files too.

2010-07-30  Simon Strandgaard

    * Unified the logging code so it's now the same both in the NewtonCommander binary as well 
    as in the NCWorker binary. Previously I was using NSLog in NewtonCommander and asl in NCWorker.
    A few days ago I needed to share code between the NewtonCommander and the NCWorker binary,
    in this code I need to write to the log, so here it became apparent that a unified logger
    was needed. So now NSLog/asl has been replaced with LOG_DEBUG and LOG_ERROR. Problem solved.

2010-07-24  Simon Strandgaard

    * SimpleCopy can now copy multiple items.

2010-07-23  Simon Strandgaard

    * moved the fixpermissions.sh script away from the executable and into Xcode's run-script-phase,
    so that we get some cleaner code.

    * imported the SimpleCopy code that I made last fall that still passes all the AnalyzeCopy exercises.

2010-07-21  Simon Strandgaard

    * made new icon with same palette as the old Norton Commander.

2010-07-19  Simon Strandgaard

	* fixpermissions script that sets the SETUID bit on the worker process.
	This script can I now run from Newton Commander, so that I no longer have to type in
	my password whenever I'm compiling the program. 
	Yesterday I did my first tests with the Worker process running as root. yay.

	* we can now switch user using the "switch user" popupbutton. This is what I envisioned 1 year ago,
	but haven't been ready for.. until now! yay

2010-07-18  Simon Strandgaard

	TAG v1.0.3
	* The worker is now used as the datasource.

2010-07-17  Simon Strandgaard     

	* Separated out filesystem code to a static library named: SharedCode.
	This library is linked both with the worker process and the main gui process.

2010-07-15  Simon Strandgaard

	TAG v1.0.2
	* The new datasource + breadcrumb system is now in place.

2010-07-14  Simon Strandgaard

	* Made a time profiling system so I can look for bottlenecks in the setWorkingDir 
	code and the future NCWorker data source. It outputs a CSV file.

2010-07-13  Simon Strandgaard

	* NSPathControl inserted, so it now looks like PathFinder/ForkLift/Transmit.
	* Replaced most of the colorful toolbar icons with black icons inside rectangular buttons.

2010-07-09  Simon Strandgaard

	* Right menu is now general purpose as the left menu.
	* The first menu item is now highlighted when the menu is showed.

2010-07-06  Simon Strandgaard

	TAG v1.0.1
	* PSMTabBarControl is now used. The old tab code has been fully removed.
	I'm getting ready for start using the worker process.

2010-07-04  Simon Strandgaard

	TAG v1.0.0
	* Integration with the PSMTabBarControl is now so mature that I from this
	point on will start removing the old tab code.

2010-01-01  Simon Strandgaard

	* Started working on a new dual pane file manager, named: Newton Commander.
	It was because OrthodoxFileManager was not gonna scale for the tab feature and 
	the code structure was rather bad.

2009-08-01  Simon Strandgaard

	* OrthodoxFileManager takes shape. Here are some of it's features.
	Browse as root. See cloaked dirs (using getdirentries). Child processes are killed
	when an operation takes too long time. Has a context menu that can be opened 
	by pressing arrow_left. Somewhat stupid Quicklook integration.

2009-05-01  Simon Strandgaard

	* Started working on a dual pane file manager, named: OrthodoxFileManager.
